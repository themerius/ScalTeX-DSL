/*
 * generated by Xtext
 */
package de.htwg.scaltex.dsl.generator

import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.IGenerator
import org.eclipse.xtext.generator.IFileSystemAccess
import com.google.inject.Inject
import org.eclipse.xtext.naming.IQualifiedNameProvider
import de.htwg.scaltex.dsl.scalTeX.Heading
import de.htwg.scaltex.dsl.scalTeX.Scaltex
import de.htwg.scaltex.dsl.scalTeX.UniversalEntity

class ScalTeXGenerator implements IGenerator {
	
	@Inject extension IQualifiedNameProvider
	
	override void doGenerate(Resource resource, IFileSystemAccess fsa) {
		for(e: resource.allContents.toIterable.filter(typeof(Scaltex))) {
      		fsa.generateFile(
        		e.name + ".scala",
        		e.compile)
    	}
	}

	def compile(Scaltex s) '''
		«FOR e : s.entities»
			«IF e instanceof Heading»
				«val Heading h = e as Heading»
				«h.content»
			«ENDIF»
			«IF e instanceof UniversalEntity»
				«val UniversalEntity u = e as UniversalEntity»
				«u.name»
			«ENDIF»
		«ENDFOR»
	'''

}
